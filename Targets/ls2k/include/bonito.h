/*
 * Bonito Register Map
 * Copyright (c) 1999 Algorithmics Ltd
 *
 * Algorithmics gives permission for anyone to use and modify this file
 * without any obligation or license condition except that you retain
 * this copyright message in any source redistribution in whole or part.
 *
 * Updated copies of this and other files can be found at
 * ftp://ftp.algor.co.uk/pub/bonito/
 *
 * Users of the Bonito controller are warmly recommended to contribute
 * any useful changes back to Algorithmics (mail to
 * bonito@algor.co.uk).
 */

/* Revision 1.48 autogenerated on 08/17/99 15:20:01 */

#ifndef _BONITO_H_
#define _BONITO_H_
#include "cpu.h"

#ifdef __ASSEMBLER__
//__ASSEMBLER__ is not defined
/* offsets from base register */
#define BONITO(x)	(x)

#else /* !__ASSEMBLER */
extern char           *heaptop;

/* offsets from base pointer, this construct allows optimisation */
/* static char * const _bonito = PA_TO_KVA1(BONITO_BASE); */
/*#define BONITO(x)	*(volatile unsigned long *)(PHYS_TO_UNCACHED(BONITO_REG_BASE))+(x))*/
#define BONITO(x)	*(volatile unsigned long *)(PHYS_TO_UNCACHED(0x1fe00000)+(x))
struct pci_config_data {
		int bus;
		int dev;
		int func;
		int interrupt;
		int primary;
		int secondary;
		int subordinate;
		unsigned int mem_start;
		unsigned int mem_end;
		unsigned int io_start;
		unsigned int io_end;
#define PCI_DEV		0x1
#define PCI_BRIDGE	0x2
		int type;
}__attribute__((aligned(4)));
#define LS2K_PCI_IO_MASK	0x1ffffff
#endif /* __ASSEMBLER__ */

#define RTC_INDEX_REG		0x70
#define RTC_DATA_REG		0x71
#define RTC_NVRAM_BASE		0x0e

#ifdef DEBUG_CONSOLE
#define COM1_BASE_ADDR		(LS2K1000_UART_REG_BASE | (DEBUG_CONSOLE << 8))
#define COM3_BASE_ADDR		(LS2K1000_UART_REG_BASE	| (DEBUG_CONSOLE << 8))	//for newdebug.S
#else
#define COM1_BASE_ADDR		LS2K1000_UART_REG_BASE
#define COM3_BASE_ADDR		LS2K1000_UART_REG_BASE		//for newdebug.S
#endif
//#define	NS16550HZ	1843200
#define	NS16550HZ		3686400

/*********************************************************************/
/*nvram define                                                       */
/*********************************************************************/
#ifdef NVRAM_IN_FLASH
#	define	NVRAM_SIZE		492
#	define	NVRAM_SECSIZE		512
#       define  ACTIVECOM_OFFS      	492
#       define  MASTER_BRIDGE_OFFS      493
#ifdef BOOT_FROM_NAND
#       define NVRAM_OFFS             0x000ffc00/*number 4 block*/
#else
#	define	NVRAM_OFFS		0x000ff000
#endif
#	define ETHER_OFFS		494 	/* Ethernet address base */
#	define VER_OFFS		500 	/* Ethernet address base */
#	define CPUFREQ_OFFS 504
#	define DDRFREQ_OFFS 506
#	define SHUTDEV_OFFS 508
#else	/* Use clock ram, 256 bytes only */
#	define NVRAM_SIZE		114
#	define NVRAM_SECSIZE		NVRAM_SIZE	/* Helper */
#	define NVRAM_OFFS		0
#	define ETHER_OFFS		108 	/* Ethernet address base */
#endif


#define BONITO_FLASH_BASE		PHYS_TO_UNCACHED(0x1c000000)
#define BONITO_FLASH_SIZE		0x100000

#define LIO_MEM_BASE0			PHYS_TO_UNCACHED(0x1e000000)
#define LIO_MEM_BASE1			PHYS_TO_UNCACHED(0x1b000000)
#define LIO_MEM_SIZE			0x2000000

#define LPC_MEM_BASE			PHYS_TO_UNCACHED(0x1df00000)
#define LPC_FIRMWARE_MEM_BASE		PHYS_TO_UNCACHED(0x1d400000)
#define LPC_MEM_SIZE			0x1000000

#define SPI_MEM_BASE			PHYS_TO_UNCACHED(0x18000000)
#define SPI_MEM_SIZE			0x2000000

#define BONITO_PCICFG0_BASE_VA		PHYS_TO_UNCACHED(0xfe00000000)
#define BONITO_PCICFG1_BASE_VA		PHYS_TO_UNCACHED(0xfe10000000)

#define PCI_IO_SPACE_BASE		0x00000000

#define BONITO_PCILO_BASE_VA    	PHYS_TO_UNCACHED(0x20000000)
#define BONITO_PCILO_SIZE		0x40000000
#define BONITO_PCILO0_BASE		0x40000000
#define BONITO_PCIIO_BASE		0x18000000
#define BONITO_PCIIO_BASE_VA		PHYS_TO_UNCACHED(0x18000000)
#define BONITO_PCIIO_SIZE		0x02000000

#define LOCK_CACHE_BASE	PHYS_TO_CACHED(0x90000000)
#define LOCK_CACHE_SIZE		0x40000	//256KB

#define KBD_STATUS_REG					PHYS_TO_UNCACHED(0x1ff4c004)
#define KBD_CNTL_REG					PHYS_TO_UNCACHED(0x1ff4c004)
#define KBD_DATA_REG					PHYS_TO_UNCACHED(0x1ff4c000)

#define kbd_read_input()				inb(KBD_DATA_REG)
#define kbd_read_status()				inb(KBD_STATUS_REG)
#define kbd_write_output(val)				outb(KBD_DATA_REG,val)
#define kbd_write_command(val)				outb(KBD_CNTL_REG, val)

#endif /* _BONITO_H_ */
